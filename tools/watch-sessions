#!/bin/sh --debug
#
# This file is part of the Lampadas Documentation System.
# 
# Copyright (c) 2000, 2001, 2002 David Merrill <david@lupercalia.net>.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# This little script is very useful for monitoring the health of the
# Lampadas server. It displays a running list of active user sessions.

usage()
{
	echo "\
Usage: watch-sessions { OPTIONS }

Where OPTIONS can be chosen from:

   -h, --help                 Write this message and exit.
   -db <database>             Override value of LAMPADAS_DB.
   -n, --interval <seconds>   Specify update interval. Default is 2 seconds.

The environment variables prefixed with 'LAMPADAS_' are typically set
within setenv.sh. Read comments in that file for a description.
"
}

check_var()
{
  [ -n "$1" ] && return  
  echo "Environment variable $2 is not set."
  echo "Read the comments in file 'setenv.sh' how to fix that."
  [ -n "$3" ] && echo "You can also use option -$3."
  exit -1
}

#---------------------
# main()


INTERVAL=""

until [ -z "$1" ]
do
  case "$1" in
      -h | --help )
	      usage
	      exit 1
	      ;;
      -db ) shift; LAMPADAS_DB="$1" ;;
      -n | --interval ) shift; INTERVAL="-n $1" ;;
      *)      echo "Invalid option: $1"
	      exit 1
	      ;;
  esac
  shift
done

check_var "$LAMPADAS_DB" "LAMPADAS_DB" "db"

watch $INTERVAL "psql $LAMPADAS_DB -c \"select trim(username) as username, ip_address, trim(uri) as uri, timestamp, age(timestamp, now()), abs(extract(minute from age(timestamp, now()))) as minutes from session order by timestamp\""



