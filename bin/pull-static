#!/usr/bin/python
#
# This script will write out static versions of all pages
# in all supported languages, starting in the current
# directory.
# 
from DataLayer import lampadas
from WebLayer import lampadasweb
from HTML import page_factory
from URLParse import URI
import os
import sys

def write_url(page, url):
    print 'generating ' + url
    uri = URI(url)
    html = page_factory.build_page(page, uri, None)
    fh = open(url, 'w')
    fh.write(html)
    fh.close()

# Tell the page factory we're building a static site.
page_factory.command_line = 1
page_factory.tablef.command_line = 1

page_codes = lampadasweb.pages.keys()
language_codes = lampadas.languages.keys()

# Write index.html file
html = '''
<html>
  <body>
    <table width="100%" height="100%">
    <tr><td align="center">
'''

for language_code in language_codes:
    language = lampadas.languages[language_code]
    if language.supported > 0:
        html += '<a href="home.' + language_code.lower() + '.html">' + language.name[language_code] + '</a><br>'

html += '''
    </td></tr>
    </table>
  </body
</html>
'''
fh = open('index.html', 'w')
fh.write(html)
fh.close()

for language_code in language_codes:
    language = lampadas.languages[language_code]
    if language.supported > 0:
        lang_ext = '.' + language_code.lower()
        for page_code in page_codes:
            page = lampadasweb.pages[page_code]
            if page.only_registered + page.only_admin + page.only_sysadmin > 0:
                continue

            # Do not render pages that require privileges
            if page.only_registered==1 or page.only_admin==1 or page.only_sysadmin==1:
                continue

            # Write topic pages
            elif page_code=='topic':
                if os.access('topic', os.F_OK)==0:
                    os.mkdir('topic')

                topic_codes = lampadas.topics.keys()
                for topic_code in topic_codes:
                    topic = lampadas.topics[topic_code]
                    url = 'topic/' + topic_code + lang_ext + '.html'
                    write_url(page, url)

            # Write subtopic pages
            elif page_code=='subtopic':
                if os.access('subtopic', os.F_OK)==0:
                    os.mkdir('subtopic')

                subtopic_codes = lampadas.subtopics.keys()
                for subtopic_code in subtopic_codes:
                    lampadas.subtopics[subtopic_code]
                    url = 'subtopic/' + subtopic_code + lang_ext + '.html'
                    write_url(page, url)

            # Write type pages
            elif page_code=='type':
                if os.access('type', os.F_OK)==0:
                    os.mkdir('type')

                type_codes = lampadas.types.keys()
                for type_code in type_codes:
                    lampadas.types[type_code]
                    url = 'type/' + type_code + lang_ext + '.html'
                    write_url(page, url)

            # Do not generate pages that are not listed in menus.
            elif page.section_code=='':
                continue
                
            else:
                url = page_code + lang_ext + '.html'
                write_url(page, url)
