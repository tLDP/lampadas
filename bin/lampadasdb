#!/bin/sh

SCRIPT_NAME=lampadasdb
DEFAULT_DBNAME=lampadas

usage()
{
	echo "\
Usage: $SCRIPT_NAME { OPTION } ACTION [ DATABASE ]

Where ACTION is one of:

    create        Create new data tables.
    defaults      Insert default values
    drop          Drop all tables.
    delete        Delete all data.
    load          Load data from files in \$LAMPADAS_SPOOL.
    save          Copy data to files in \$LAMPADAS_SPOOL.

Where OPTION can choosen from:

    -h | --help   Write this message and exit.
    -sql <dir>    Override value of LAMPADAS_SQL
    -spool <dir>  Override value of LAMPADAS_SPOOL

LAMPADAS_SQL and LAMPADAS_SPOOL are typically set within setenv.sh.
Read comments in that file for a description.

Default value for LAMPADAS_SPOOL is \$LAMPADAS_SQL.
Default value for argument DATABASE is $DEFAULT_DBNAME.
"
}

find_sql()
{
  local name=${1:-create}
  find $LAMPADAS_SQL -type f -name "$@" -maxdepth 2 -mindepth 2
}

find_table()
{
  # first -e removes trailing file name, e.g. "/create.sql"
  # second -e removes all leading directories
  find_sql "$@" | sed -e "s#/$1\$##" -e "s#.*/##"
}

#---------------------------------------------

need_rebuild()
{
  # return ok if target file does not exist
  [ -e "$1" ] || return 0

  # return ok if at least one .sql file is newer than target file
  # grep will return error if no file is found at all
  # the pattern should match any input
  find_sql '*.sql' -newer "$1" | grep -q . && return 0

  # return error. we don't need to rebuild makefile
  return 1
}

build_makefile()
{
  pattern_suffix='[[:space:]]*\([_[:alnum:]]*\).*'
  tables=$( find_table create.sql )

  echo Rebuilding ${TABLE_ORDER##*/}
  (
    echo "# Generated by $SCRIPT_NAME, do not edit"
    date "+# %c"
    echo ""

    # one rule to echo the names of all tables
    # the first expression of sed inserts a tab-stop (not spaces)
    echo "all: \\"
    echo "$tables" | sed -e 's/^/        _/' -e 's/$/ \\/'
    echo ""

    # one rule for each table that does echo its name
    echo "$tables" | sed -e 's/\([^[:space:]]*\)/_\1: ; @echo "\1"/'
    echo ""

    find_sql '*.sql' | while read file; do
      dir=${file%/*}
      table=${dir##*/}
      suffix="[[:space:]]*\([_[:alnum:]]*\).*/_$table: _\1/p"
      sed -n \
	  -e "s/.*\<[Rr][Ee][Ff][Ee][Rr][Ee][Nn][Cc][Ee][Ss]$suffix" \
	  -e "s/.*\<[Ff][Rr][Oo][Mm]$suffix" \
	  < $file
    done
  ) > $TABLE_ORDER
}

#---------------------------------------------
create()
{
  echo "-- create.sql"
  make -f $TABLE_ORDER \
  | sed "s#\(.*\)#$LAMPADAS_SQL/\1/create.sql#" \
  | xargs -r cat

  for name in views.sql indexes.sql permissions.sql; do
    echo "-- ${name}"
    find_sql ${name} | xargs -r cat
  done
}

drop()
{
  find_table view.sql | sed -e 's#\(.*\)#DROP VIEW \1;#'

  make -f $TABLE_ORDER \
  | tac \
  | sed 's#\(.*\)#DROP TABLE \1;#'
}

delete()
{
  make -f $TABLE_ORDER \
  | tac \
  | sed 's#\(.*\)#DELETE FROM \1;#'
}

load()
{
  make -f $TABLE_ORDER \
  | sed -e "s#\(.*\)#copy \1 from '$LAMPADAS_SPOOL/\1';#"
}

save()
{
  make -f $TABLE_ORDER \
  | sed -e "s#\(.*\)#copy \1 to '$LAMPADAS_SPOOL/\1';#"
}

defaults()
{
  make -f $TABLE_ORDER \
  | while read table
  do
    find $LAMPADAS_SQL/$table -type f -name '[A-Z][A-Z].m4' \
    | while read file
    do
      lang=${file%.m4}
      lang=${lang##*/}
      echo "-- $table/$lang --"
      m4 -P -DI18N_lang_code=${lang} "$LAMPADAS_SQL/$table/insert.m4" $file
      echo ""
    done
  done
}

#---------------------------------------------
# main()

while true; do
  case "${1}" in
      "" | -h | --help )
	      usage
	      exit 1
	      ;;
      "-sql" )
	      shift
	      LAMPADAS_SQL=$1
	      shift
	      ;;
      "-spool" )
	      shift
	      LAMPADAS_SQL_SPOOL=$1
	      shift
	      ;;
      "create" | "drop" | "delete" | "load" | "save" | "defaults" )
              break
	      ;;
      *)      echo "Invalid command: $1"
	      exit 1
	      ;;
  esac
done

if [ -z "$LAMPADAS_SQL" ]; then
  echo "Environment variable LAMPADAS_SQL is not set."
  echo "Read the comments in file 'setenv.sh' how to fix that,"
  echo "or use option -sql."
  exit -1
fi

[ -n "$LAMPADAS_SPOOL" ] || export LAMPADAS_SPOOL=/tmp

TABLE_ORDER=$LAMPADAS_SPOOL/table_order.mak

if [ $# -gt 2 ]; then
 	usage
	exit 1
fi
DBNAME=${2:-$DEFAULT_DBNAME}
need_rebuild "$TABLE_ORDER" && build_makefile

sql=$LAMPADAS_SPOOL/$1.sql
if need_rebuild "$sql"; then
  echo "Writing $sql"
  (
    echo "-- Created by $SCRIPT_NAME, do not edit"
    date "+-- %c"
    echo
    "$@" 
  ) > $sql || exit -1
fi
echo "Executing $sql" \
&& psql $DBNAME -qf $sql
