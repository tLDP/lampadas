
	Add an item, or claim an item by adding your name...

-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-


TODO:



The various boxes really should be editable, as the pages are.
Then site administrators can remove fields they do not use as part of
their workflow practices. And it should be faster w/o concatenation.

Update what concatenation there is left to use the WOStringIO routine
from Nicolas (in Globals.py).

Add "primary" field to document_file to know which is the topmost file.

Move templates out of regular document table. They aren't regular documents.

Provide a set of entities that will be available to authors, including the text
of licenses in DocBook XML/SGML, etc. This will make it easy for an author to
make a doc under a certain license, automatically.

Need to do editing interface for a document.

Load and display cvs info about each file in the document -- committer, date/time,
etc.

We need a cron job that runs nightly and stores statistics into the stats and
stats_cdf tables. This should be a Python module (Stats.py), which deletes
and then replaces any existing records for the current day. The cron job would
just be a call to that library. So put the Python module in pylib, but put the
wrapper script under /lampadas/cron (a new directory). See the old Perl code,
and just port it. Feel free to recommend additional metrics that would be
valuable to the management of the site. Also add user count, which didn't
apply to the LDPDB but does apply to Lampadas. And docs served, pages served.

Add date_entered timestamps to additional records where it is appropriate.
Maybe even to all of them. It's nice meta-data to have. And add creator_id
also, to record the user who created the record. Then it will have to
be passed in through all the Add methods.

Remember the number of times a user has logged on, and when they last logged
on, and maybe even their IP address in case of DoS or other attacks by a user.

Make sure that email addresses are spam-protected everywhere they display on
the website! Put this in the Developer's Guide; it's policy.

Allow users to tag documents as their "Favorites", so they can come back
and find them again quickly and easily.

Allow users to "request to be notified" when a document is updated.
This will be particularly useful for translators, but others could
find it useful as well.

Provide CVS log for a document upon request, for owners only.

IBM wants to write a CQS module for Lampadas, but we need to define a search
API implemented in a URL scheme for them to code against. This is pretty
high priority because it will give us a huge amount of visibility and help
build the project.

Speed up initial loading; it's annoying and overhead for short running scripts.
Loading all tables in single SELECT statements would help a lot,
but would require top level objects to do the loading.

Need to devise set of error messages and add them to Lintadas.


PENDING:

Write a Makefile to install Lampadas onto a fresh system. Also let `make test`
run the unit tests, and `make clean` remove any installation. `make tar` and
other build targets would be nice, too.
	-- wrote Makefiles, but no test target yet


DONE:

Flatten the topic/subtopic structures into a single table with topic_id as
the record identifier, plus topic_num and subtopic_num for display only.
This will let people reorder and renumber topics without having to alter any
referring records in document_topic.
	-- didn't flatten, but linked document to subtopic directly, and
	made renumbering easy.

Write manpage.
	-- done DCM.
	
Need combobox for selecting seriesid for a document.
	-- done DCM.

Guylhem wants to be able to flag a document, "maintainers needed", even if it
is maintained but the maintainer needs or wants help. (David)
	-- done 2002-07-04 DCM.

Block table should not include language support -- use only for HTML blocks
with embedded tokens.
	-- done 2002-07-04 DCM.


WISHLIST:

These are pie-in-the-sky ideas, many won't pan out. They won't be in the
initial release.

Add a table of programs, maybe from the Debian repository and/or Red Hat
and/or the rpmfind.net database. Then let people record what applications
a document covers. So, a document could be listed as a "User's Guide", and
also tagged with the application "mutt". Then the system knows by meta-data
that the document is a user's guide to mutt.

Allow users to record the distribution they are using, and let them browse
through only the documentation that applies to that distribution, as a kind
of a filter. Applying filters could be a very powerful way to search the
database, especially once it gets up into the thousands of documents.

Add the capability to merge in the entire contents of the server's
ScrollKeeper database, automatically. That would make it a piece of cake
to publish the Gnome and KDE documentation, which is already available
there, with a minimum of maintenance.

Add support for the W3C core CSS styles, if possible.

Improve the security system so that instead of single boolean fields to get
permissions (e.g., the admin and sysadmin fields), each user can be assigned
a role which comes with a set of permissions. This will allow more fine-
grained control over permissions, so admins can customize them to fit their
particular organizational needs.

