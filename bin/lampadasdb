#!/bin/sh

SQLDIR=/usr/local/share/lampadas/sql
TABLESDIR=$SQLDIR/tables
TABLE_ORDER=$TABLESDIR/table_order.mak

usage()
{
	echo "\
Usage: lampadas.sh [-h | --help] ACTION DATABASE

Where ACTION is one of:

    create       Create new data tables.
    defaults     Insert default values
    drop         Drop all tables.
    delete       Delete all data.
    load         Load data from files in /tmp.
    save         Copy data to files in /tmp.
"
}

find_sql()
{
  local name=${1:-create}
  find $TABLESDIR -type f -name "$@" -maxdepth 2 -mindepth 2
}

find_table()
{
  # first -e removes trailing file name, e.g. "/create.sql"
  # second -e removes all leading directories
  find_sql "$@" | sed -e "s#/$1\$##" -e "s#.*/##"
}

#---------------------------------------------

need_makefile()
{
  # return ok if makefile does not exist
  [ -e "$TABLE_ORDER" ] || return 0

  # return ok if at least one .sql file is newer than makefile
  # grep will return error if no file is found at all
  # the pattern should match any input
  find_sql '*.sql' -newer "$TABLE_ORDER" | grep -q . && return 0

  # return error. we don't need to rebuild makefile
  return 1
}

build_makefile()
{
  pattern_suffix='[[:space:]]*\([_[:alnum:]]*\).*'
  tables=$( find_table create.sql )

  echo Rebuilding ${TABLE_ORDER##*/}
  (
    echo "# Generated by lampadasdb.sh, do not edit"
    date "+# %c"
    echo ""

    # one rule to echo the names of all tables
    # the first expression of sed inserts a tab-stop (not spaces)
    echo "all: \\"
    echo "$tables" | sed -e 's/^/        _/' -e 's/$/ \\/'
    echo ""

    # one rule for each table that does echo its name
    echo "$tables" | sed -e 's/\([^[:space:]]*\)/_\1: ; @echo "\1"/'
    echo ""

    find_sql '*.sql' | while read file; do
      dir=${file%/*}
      table=${dir##*/}
      suffix="[[:space:]]*\([_[:alnum:]]*\).*/_$table: _\1/p"
      sed -n \
	  -e "s/.*\<[Rr][Ee][Ff][Ee][Rr][Ee][Nn][Cc][Ee][Ss]$suffix" \
	  -e "s/.*\<[Ff][Rr][Oo][Mm]$suffix" \
	  < $file
    done
  ) > $TABLE_ORDER
}

#---------------------------------------------
create()
{
  echo "-- create.sql"
  make -f $TABLE_ORDER \
  | sed "s#\(.*\)#$TABLESDIR/\1/create.sql#" \
  | xargs -r cat

  for name in views.sql indexes.sql permissions.sql; do
    echo "-- ${name}"
    find_sql ${name} | xargs -r cat
  done
}

drop()
{
  find_table view.sql | sed -e 's#\(.*\)#DROP VIEW \1;#'

  make -f $TABLE_ORDER \
  | tac \
  | sed 's#\(.*\)#DROP TABLE \1;#'
}

delete()
{
  make -f $TABLE_ORDER \
  | tac \
  | sed 's#\(.*\)#DELETE FROM \1;#'
}

load()
{
  make -f $TABLE_ORDER | sed -e "s#\(.*\)#copy \1 from '/tmp/\1';#"
}

save()
{
  make -f $TABLE_ORDER | sed -e "s#\(.*\)#copy \1 to '/tmp/\1';#"
}

defaults()
{
  make -f $TABLE_ORDER \
  | while read table
  do
    find $TABLESDIR/$table -type f -name '[A-Z][A-Z].m4' \
    | while read file
    do
      lang=${file%.m4}
      lang=${lang##*/}
      echo "-- $table/$lang --"
      m4 -P -DI18N_lang_code=${lang} "$TABLESDIR/$table/insert.m4" $file
      echo ""
    done
  done
}

#---------------------------------------------
# main()

while test $# -gt 0 ; do
    case "${1}" in
	-h | --help )
		usage
		exit 1
		;;
	"create" | "drop" | "delete" | "load" | "save" | "defaults" )
		break
		;;
	*)	echo "Invalid command: $1"
		exit 1
		;;
    esac
done

if [ $# -ne 2 ]; then
 	usage
	exit 1
fi

need_makefile && build_makefile

sql=$TABLESDIR/$1.sql
echo "Writing $sql"
(
  echo "-- Created by lampadasdb.sh, do not edit"
  date "+-- %c"
  echo
  "$@" 
) > $TABLESDIR/$1.sql \
&& echo "Executing $sql" \
&& psql $2 -qf $TABLESDIR/$1.sql
